//// Text, Fonts, and Lists //
	//
	//	Fonts
	//		font
	//		font-family
	//		font-weight
	//		font-size
	//		font-style
	//	Text
	//		line-height
	//		text-align
	//		text-decoration
	//		text-indent
	//		text-transform
	//		White-space
	//		text-shadow
	//		text-shadow
	//		text-overflow
	//	Lists
	//		list-style
	//		list-style-type
	//		list-style-position
	//		list-style-image
	//	Web Typography
	//		Web Fonts
	//		Icon Fonts

//// Fonts ////

//// font
	// The convinent shorthand property for setting all of the properties we just learned in one declaration
	// ! the font-size and the font-family have to be specified !
	// ! Style Varient and Weight have to be put before the Size !
	// ! Any value omitted will be set to it's initial value, not inherit value !
	// ! font family has to be the last value defined !
	h1 {
		font: italic small-caps bold 1.5em Georgia, "Times New Roman", Times, serif:
	}

//// font-family
	// Specifies a typeface for the text in an element
	// www.w3.org/Style/Examples/007/fonts.en.html
	// Serif fonts - have finishing strokes
	// Examples: Times, Georgia
	// San-serif - fonts have plain stroke endings
	// Examples: Helvetica, Verdana, Arial
	// Monospace Fonts - all letters and characters have the same fixed width and each occupy the same amount of horizontal space
	// Examples: courier, lucida console
	// Ideally it's good to set up a Font Stack so if one is not available
	// If a font is made of more than one words we need to add "" ''
	p {
		font-family: Georgia, "Times New Roman", Times, serif:
	}

//// font-weight
	// Specifies the weight style in the font - it sets how thick or thin the characters are displayed
	// Values: 100 - 800 or lighter, normal(400) and bold(700)
	{font-weight: 600;}

//// font-size
	// Specifies the size of a font by using keywords or units
	// Values: small, medium or larger. 16px 1em 50%
	{font-size: 2.5em;}

//// font-style
	// Specifies the fonts style for the text
	// Values: normal, italic, oblique
	{font-style: italic;}

//// font-style
	// Specifies whether text should be displayed in small caps font
	// Values: small-caps, 
	{font-style: small-caps;}

//// Text ////

//// line-height
	// Specifies the vertical spacing between lines of text
	// A line height = font-size + leading
	// Values: normal, 1.5, 1.5em 150%
	{line-height: 1.5;}

//// text-align
	// Specifies the horizontal alignment of text
	// Values: left, right, center, justify
	{text-align: center;}

//// text-decoration
	// specifies the line decoration of text
	// Values: none, underline, overline, line-through
	{text-decoration: none;}

//// text-indent
	// specifies the first line of text indent
	// Values: 24px, -24px, 1.5em 150%
	{text-indent: 24px;}

//// text-transform
	// Specifies the case of text
	// Values: lowercase and capitalize
	{text-transform: uppercase;}

//// white-space
	// Specifies how the white-space in an (html) element is displayed
	// Values: 
	// normal - ignore multiple spaces and linebreaks
	// nowrap - forces text into one line
	// pre - honors all spaces, indentation and breaklines
	// pre-line - honor line breaks but not multiple spaces
	// pre-wrap - honors double spaces and line breaks
	{white-space: nowrap;}

//// text-shadow
	// Specifies the shadow used to create drop shadows for text
	// Values: {text-shadow: h-offset, v-offset, blur(optional), color;}
	// Can take multiple entries seperated by comma
	{text-shadow:  1px 1px 4px rgba(0, 0, 0, 0.6);}
	h1 {
		text-shadow:  0 -1px #767676,
									0 -2px #262626,
									0 0 8px rgb(62, 106, 168);
	}

//// text-overflow
	// Specifies what should happen when text overflow its containing element
	// Values: clip(default), hidden, ellipsis
	{text-overflow: ellipsis;}
	//// word-wrap
	// Gives us a simple way of wrapping text within a single world
	// Good use for long links
	// Values normal, break-word
	{word-wrap: break-word;}

//// Lists ////

//// list-style
	// Shorthand property that defines all the list properties in one declaration
	// Values: can take any of the 3 properties in any order
	{list-style: circle inside;}

//// list-style-type
	// Specifies the style of ul/ol lists
	// Values: disc, circle, square, lower-roman, decimal-leading-zero, etc
	// See more on: developer.mozzila.org/en-US/docs/CSS/list-style
	{list-style-type: square;}

//// list-style-position
	// Specifies if the list market is inside or outsite the list item
	// Values: outsite(default), inside
	// ! Browsers by defaults add margin on the left older iE uses padding !
	// ! It's good pratice to use both {margin-left: 0; padding-left: 0;} !
	{list-style-position: inside;}

//// list-style-image
	// Allows to use a image as a market in place of a bullet
	{list-style-image: url('img/marker.png');}
	// ! if icons are a little off use this instead !
	ul {
		list-style-type: none;
		background: url('img/market.png') no-repeat 0 2px;
	} 

//// Web Typography ////

//// Web Fonts
	// We can import fonts by adding a meta link on the html head
	 <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,700' rel='stylesheet' type='text/css'>
	// We can import it through our css using @import
	@import url(http://fonts.googleapis.com/css?family=Open+Sans:400,700);
	// We can import the webkit files using @font-face
	// ! When using @font-face we can name it anything we want !
	// .eot (ie format), .eot (ie6-8 format), .woff (best most supported formate), .ttf (for safary, android and iOS displays), svg (legagy versions of iOS)
	@font-face{ 
		font-family: 'OpenSans';
		src: url('fonts/OpenSans-Regular-webfont.eot');
		src: url('fonts/OpenSans-Regular-webfont.eot?iefix') format('eot'),
				 url('fonts/OpenSans-Regular-webfont.woff') format('woff'),
				 url('fonts/OpenSans-Regular-webfont.ttf') format('truetype'),
				 url('fonts/OpenSans-Regular-webfont.svg#webfont') format('svg');
		font-weight: bold;
		font-style: normal;
	}

//// Icon Fonts
	// A fast way to have icons in our website
	// They load up to x14 faster than images and are 90% smaller than svgs
	@font-face{ 
		font-family: 'icomoon';
		src: url('fonts/icomoon.eot');
		src: url('fonts/icomoon.eot?iefix') format('eot'),
				 url('fonts/icomoon.woff') format('woff'),
				 url('fonts/icomoon.ttf') format('truetype'),
				 url('fonts/icomoon.svg#webfont') format('svg');
	}
	// We can then include icons using pseudo classes
	.title::before {
		content: "\e000";
		font-family: "icomoon";
	}




