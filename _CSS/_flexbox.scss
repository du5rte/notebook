//// Flexbox ////
	//
	//	flex
	//	flex-direction
	//	justify-content 
	//	margin: auto;
	//	flex-wrap
	//	flex or flex-grow
	//	order
	//	align-self 
	//	@media Queries
	//	Multi-Coulmn Layouts


//// flex
	// Uses flex containers and flex items to easily align elements respecting the container and each other
	// https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction
	// ! Some browsers like safari still need prefixes !
	.nav { display: -webkit-flex; }


//// flex-direction
	// Allows us the change the flexbox axis directions
	// Main Axis (X left to right), Cross Axis (Y top to bottom)
	// values: row(default), row-reverse, column, column-reverse
	.nav { 
		-webkit-flex-direction: row;
		-webkit-flex-direction: column;
	}

//// justify-content 
	// Adjusts the position and spacing of flex items on the X-Axis
	// Values: flex-start(default), flex-end, center, space-between
	.nav { 
		-webkit-justify-content: flex-start;
		-webkit-justify-content: flex-end;
		-webkit-justify-content: space-between;
		-webkit-justify-content: center;
	}

//// margin: auto;
	// Auto absorbs extra space and push other flex items in opposite way
	.nav li:last-child {
		margin-left: auto; //pushed to the right others to the left
	}
	.nav li:first-child {
		margin-right: auto; //pushed to the left others to the right
	}

//// flex-wrap
	// Fixes overflowing elements by creating a multi-line container
	.nav { -webkit-flex-wrap: wrap; }

//// flex or flex-grow
	// Determins how much the flex item will grow relative to others
	// all items take the same free space
	.nav li { -webkit-flex-grow: 1; }
	.col-c { -webkit-flex: 2; }

//// order
	// Allow us to change the order of items
	.col-c { -webkit-order: -1; }

//// align-self 
	// Allows us to vertically align blocks
	.col-b {
		-webkit-align-self: center; // centers on the Y-Axis
		-webkit-align-self: flex-end; // Pushes to the end of Y-Axis
		-webkit-align-self: stretch; // Default values, fill the space
	}

//// @media Queries
	// We can use media queries to easily change layouts
	@media screen and (max-width: 999px) {
		.main {
			-webkit-flex-direction: column;
		}
	}

//// Multi-Coulmn Layout
	// Defines multiple content columns with widths, space and rules
	.main {
		//Columns
		-webkit-column-count: 3;
		-webkit-column-gap: 3em;
		-webkit-column-width: 250px; //acts like a max-width
		//shorthand ! with a S !
		-webkit-columns: 250px 3;
		
		//Columns-rules
		-webkit-column-rule-width: 2px;
		-webkit-column-rule-style: dotted;
		-webkit-column-rule-color: black;
		//shorthand
		-webkit-column-rule: 2px dotted black;

	}
	//Column Span
	h1 { -webkit-column-span: all; }
	